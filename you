def func1(arg1, arg2):
    var21 = var5(arg2, arg1)
    var24 = class5()
    for var25 in range(45):
        var24.func6(arg2, var25)
    var41 = func7(var21, arg2)
    var47 = func8(arg1, var41)
    var48 = func11()
    var49 = -695 - (((209 ^ (arg1 & (arg1 | arg2) - arg1) ^ (((-887712789 ^ -459) | (arg1 & var48 & ((var41 | arg2) - arg1 | var47 - var47) ^ var21 + arg2 + var41)) - var41)) | var41) - arg2) ^ -1096344494
    var50 = (arg2 | ((var49 - -1854727806) ^ ((var48 ^ (((var47 + (((-831917599 & (472 & var49)) ^ ((arg2 | ((var21 & -570471145) | arg2)) - arg2)) ^ var47)) - var21) | var48) & -728) | -1938963783)) ^ var21 + var49 | var49) & var48
    var51 = -183 + arg1
    var52 = var51 + (var50 - var49)
    var53 = var52 + var41 & (-816 + 543)
    result = 2099072554 & var21 - arg2
    return result
def func11():
    func9()
    result = len(xrange(3))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 4
def func8(arg42, arg43):
    var44 = arg43 + (766 & (((364 ^ -824 - arg43) + -474) & ((arg43 - arg43) | -2117334668 - arg42 & (arg43 - -996) ^ 675610519 | (arg42 + ((475 | -1186754756) | arg43) - arg43 | 804 | arg42 & arg42)))) - 204
    var45 = (((86 & (385002233 - (arg43 - (((arg42 ^ arg43 + -441726141 + var44 + ((10 ^ (412996816 & arg42 | arg43 ^ 352401847) + -1908181896) & arg43)) ^ var44) & -512460159) - -1073085555)) + arg42) ^ arg42) - arg43) + var44 + 701
    var46 = -445 + ((var44 & arg43) ^ (arg42 | (arg43 ^ 540090731) | -1852845018)) - 752 ^ 743 | arg43
    result = 311092946 | 1288219133 + arg42
    return result
def func7(arg26, arg27):
    var28 = arg26 ^ 483
    var29 = arg26 - -1443978188 & var28
    var30 = (var29 ^ arg27 ^ arg26) + var29
    var31 = var28 - var30 + 316 & var30
    var32 = (var29 | -1613713881) | var30 & arg27
    var33 = (var28 + var28 - var31) - var30
    var34 = var33 - arg27
    var35 = var28 & 1851995712
    var36 = arg26 | (var31 + var32)
    var37 = var30 & var30 - var29 | var36
    var38 = var29 - (var33 | var37) - var31
    if var32 < var33:
        var39 = ((var29 & 484) + var35) + -34
    else:
        var39 = var33 ^ var36 & arg26 - var32
    var40 = var29 | var29 ^ var33 + var38
    result = ((var36 + (var40 - var35) + var38) ^ (925 + -164419122) & var29 + (var33 | var32 & var35) + var31) | var40
    return result
class class5(object):
    def func6(self, arg22, arg23):
        return 0
def func4(arg6, arg7):
    if arg6 < arg7:
        var8 = arg7 | -257 + arg6 | -260
    else:
        var8 = arg6 + arg6 ^ arg7 & arg6
    var9 = arg7 | arg6
    var10 = var9 - -522
    var11 = -865801032 ^ (993 ^ -735) - -1529809968
    var12 = var9 & -193
    var13 = (54 - 836) | arg7 + var10
    if var11 < var13:
        var14 = ((var12 - 327) & arg6) - var12
    else:
        var14 = var11 ^ var11 & var11 + 407405609
    var15 = (var13 + var12) & var12 - var12
    var16 = (arg7 ^ -326 - arg6) | 817896075
    var17 = -905 ^ (-451 + -355) ^ var13
    var18 = var17 | -256226469 + 1747333933
    var19 = (var12 - var17) ^ 1730997509 | var16
    var20 = var12 | var9
    result = var13 - -84
    return result
def func3():
    closure = [-9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
